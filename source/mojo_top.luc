module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input cclk,             // configuration clock, AVR ready when high
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy,      // AVR RX buffer full
    output io_led [3][8],   // LEDs on IO Shield
    output io_seg [8],      // 7-segment LEDs on IO Shield
    output io_sel [16],      // Digit select on IO Shield
    input io_button [5],    // 5 buttons on IO Shield
    input io_dip [3][8]     // DIP switches on IO Shield
  ) {
  sig rst; 
                   // reset signal

   .clk(clk) {
  
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
    .rst(rst){
      fsm_main main;
        dff innerclock[25];
  dff lolclock[8];
      dff flag(#INIT(1));
      
    }
     
  }

  
  always {
    
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
 
    led = 8h00;             // turn LEDs off
    spi_miso = bz;          // not using SPI
    spi_channel = bzzzz;    // not using flags
    avr_rx = bz;            // not using serial port
    
    io_led = 3x{{8h00}};    // turn LEDs off
    io_seg = 8hff;          // turn segments off
    io_sel = 4hf;  
    main.flag = flag.q;
     innerclock.d = innerclock.q+1;
    if (innerclock.q == b1111111111111111111111111){
    lolclock.d = lolclock.q+1;
      innerclock.d = b0000000000000000000000000;
      }
    if(main.delay ==1){
    lolclock.d =b00000000;
      }
    main.threesig = innerclock.q[4:2];
    if(lolclock.q > b00000111 ){
    flag.d = 0;
      io_led[0][0] = 1;
      }
   if(io_dip[1][0] == 0 && io_dip[1][1] == 0 && io_dip[1][2] == 0 && io_dip[1][3]==0){
    main.btn_ready = 1;
      }
    else{
    main.btn_ready = 0;
      }
    
    io_led[0][main.led1] = 1;
    io_led[1][main.led2] = 1;
    io_led[2][main.led3] = 1; 
    io_led[0][7] = main.inv11;
   io_led[1][7] = main.inv22;
   io_led[2][7] = main.inv33;         // select no digits
    io_led[1][7] = main.delay;
    io_led[2][main.debugcheck]= 1;
    //io_led[2][0] = main.out;
    main.a = io_dip[1][0];
    main.b = io_dip[1][1];
    main.c = io_dip[1][2];
    main.d = io_dip[1][3]; 
    io_seg = 00000001;
    
  //  io_led[0][0] = main.out;
    
    
  }
}